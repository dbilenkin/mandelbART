{"version":3,"sources":["components/Draw.js","components/ColorPicker.js","samples.js","Mandelbrot.js","App.js","utils.js","serviceWorker.js","index.js"],"names":["Draw","resetCanvas","_this","props","reset","changeZoom","_ref","clientX","clientY","changeZoomConst","state","mandelbrot","zoom","this","canvas","refs","start","update","react_default","a","createElement","Segment","className","onClick","ref","width","height","Button","basic","color","save","zoomConst","type","id","value","iterations","name","min","max","onChange","changeIterations","htmlFor","zoomFactor","changeZoomFactor","Component","ColorPicker","displayColorPicker","handleClick","setState","handleClose","handleChange","changeColor","index","styles","reactCSS","default","borderRadius","background","concat","r","g","b","swatch","padding","boxShadow","display","cursor","popover","position","zIndex","cover","top","right","bottom","left","style","react_color_lib","React","samples","original","rules","speed","size","symmetric","weirdSquare","weirdHighway","filledTriangle","Mandelbrot","initGrid","grid","i","squareC","c","hexToRgb","hex","bigint","parseInt","slice","makeColorsFromPalette","colors","rgbPalette","palette","map","length","c1","c2","diffs","j","colorSmooth","push","z","_this$squareC","checkPoint","point","topLeft","x","xZoomConst","y","yZoomConst","ctx","fillStyle","fillRect","recolor","calcConsts","centerA","centerB","console","log","goThroughRow","goThroughPoints","async","_loop","setTimeout","clearRect","getClientRects","resize","tempCanvas","tempCtx","document","getContext","toBlob","blob","saveAs","App","NUM_RULES","Math","floor","random","changeSteps","steps","Object","toConsumableArray","changeSpeed","event","target","changeSize","changeSmooth","toggleRunning","running","handleItemClick","e","sample","sampleRule","split","dir","toString","sampleRules","changePalette","hexToRGB","_queryString$parse","queryString","parse","window","location","search","_this2","Menu","text","Item","header","components_ColorPicker","components_Draw","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e209fcf3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Button, Segment } from \"semantic-ui-react\";\n\nclass Draw extends Component {\n\n  componentDidMount() {\n    this.canvas = this.refs.canvas;\n    this.props.state.mandelbrot.start(this.canvas, this.props.state);\n  }\n\n  componentDidUpdate() {\n    this.props.state.mandelbrot.update(this.props.state);\n  }\n\n  resetCanvas = () => {\n    this.props.reset();\n  };\n\n  changeZoom = ({ clientX, clientY }) => {\n    this.props.changeZoomConst();\n    this.props.state.mandelbrot.zoom({ clientX, clientY });\n  };\n\n  render() {\n    return (\n      <Segment className=\"grid-card\">\n        <div className=\"Grid\">\n          <canvas\n            onClick={this.changeZoom}\n            ref=\"canvas\"\n            width=\"600\"\n            height=\"400\"\n          />\n        </div>\n        <div className=\"interaction\">\n          <div className=\"buttons\">\n            <Button basic color=\"purple\" onClick={this.resetCanvas}>\n              Reset\n            </Button>\n            <Button basic color=\"blue\" onClick={this.props.state.mandelbrot.save}>\n              Save\n            </Button>\n          </div>\n          <div>Zoom: {this.props.state.zoomConst}</div>\n          <div className=\"sliders\">\n            <input\n              type=\"range\"\n              id=\"iterations\"\n              value={this.props.state.iterations}\n              name=\"iterations\"\n              min=\"100\"\n              max=\"10000\"\n              onChange={this.props.changeIterations}\n            />\n            <label htmlFor=\"iterations\">\n              Iterations: {this.props.state.iterations}\n            </label>\n          </div>\n          <div className=\"sliders\">\n            <input\n              type=\"range\"\n              id=\"zoomFactor\"\n              value={this.props.state.zoomFactor}\n              name=\"zoomFactor\"\n              min=\"2\"\n              max=\"100\"\n              onChange={this.props.changeZoomFactor}\n            />\n            <label htmlFor=\"zoomFactor\">\n              Zoom Factor: {this.props.state.zoomFactor}\n            </label>\n          </div>\n        </div>\n      </Segment>\n    );\n  }\n}\n\nexport default Draw;\n","import React from 'react'\nimport reactCSS from 'reactcss'\nimport { SketchPicker } from 'react-color'\n\nclass ColorPicker extends React.Component {\n  state = {\n    displayColorPicker: false,\n  };\n\n  handleClick = () => {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker })\n  };\n\n  handleClose = () => {\n    this.setState({ displayColorPicker: false })\n  };\n\n  handleChange = (color) => {\n    this.props.changeColor(this.props.index, color);\n  };\n\n  render() {\n\n    const styles = reactCSS({\n      'default': {\n        color: {\n          width: '36px',\n          height: '14px',\n          borderRadius: '2px',\n          background: `rgba(${ this.props.color.r }, ${ this.props.color.g }, ${ this.props.color.b }, ${ this.props.color.a })`,\n        },\n        swatch: {\n          padding: '5px',\n          background: '#fff',\n          borderRadius: '1px',\n          boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n          display: 'inline-block',\n          cursor: 'pointer',\n        },\n        popover: {\n          position: 'absolute',\n          zIndex: '2',\n        },\n        cover: {\n          position: 'fixed',\n          top: '0px',\n          right: '0px',\n          bottom: '0px',\n          left: '0px',\n        },\n      },\n    });\n\n    return (\n      <div>\n        <div style={ styles.swatch } onClick={ this.handleClick }>\n          <div style={ styles.color } />\n        </div>\n        { this.state.displayColorPicker ? <div style={ styles.popover }>\n          <div style={ styles.cover } onClick={ this.handleClose }/>\n          <SketchPicker color={ this.props.color } onChange={ this.handleChange } />\n        </div> : null }\n\n      </div>\n    )\n  }\n}\n\nexport default ColorPicker","import { getRandomColor } from \"./utils\";\n\nconst samples = {\n  original: {\n    rules: \"LR\",\n    speed: 7,\n    size: 6\n  },\n  symmetric: {\n    rules: \"LLRR\",\n    speed: 9,\n    size: 4\n  },\n  weirdSquare: {\n    rules: \"LRRRRRLLR\",\n    speed: 10,\n    size: 2\n  },\n  weirdHighway: {\n    rules: \"LLRRRLRLRLLR\",\n    speed: 8,\n    size: 3\n  },\n  filledTriangle: {\n    rules: \"RRLLLRLLLRRR\",\n    speed: 9,\n    size: 2\n  }\n}\n\nexport function sampleRules(sample) {\n  const sampleRule = {\n    running: true\n  }\n\n  sampleRule.rules = samples[sample].rules.split(\"\").map((dir, index) => {\n    return {\n      color: index === 0 ? \"#ffffff\" : getRandomColor(),\n      dir: dir === \"L\" ? \"left\" : \"right\"\n    }\n  });\n\n  sampleRule.speed = samples[sample].speed;\n  sampleRule.size = samples[sample].size;\n\n  return sampleRule;\n\n}\n","import saveAs from \"file-saver\";\n\nexport default class Mandelbrot {\n\n  initGrid = () => {\n    this.grid = [];\n    for (let i = 0; i < this.width; i++) {\n      this.grid[i] = [];\n    }\n  }\n\n  squareC = c => {\n    const a = c.a * c.a - c.b * c.b;\n    const b = 2 * c.a * c.b;\n    return { a, b };\n  }\n\n  hexToRgb = hex => {\n    const bigint = parseInt(hex.slice(1), 16);\n    const r = (bigint >> 16) & 255;\n    const g = (bigint >> 8) & 255;\n    const b = bigint & 255;\n    return { r, g, b };\n  }\n\n  // let this.state.palette = ['644536','B2675E','C4A381','BBD686','EEF1BD'];\n  // let this.state.palette = ['34356D','FF5C52','FEE84D','6BAE58','A7DBEA'];\n  // let this.state.palette = ['faa916','bd312d','31393c','2176ff','06a77d'];\n\n  makeColorsFromPalette = () => {\n    this.colors = [];\n    const rgbPalette = this.state.palette.map(color => this.hexToRgb(color));\n    for (let i = 0; i < this.state.palette.length; i++) {\n      const c1 = rgbPalette[i];\n      const c2 = rgbPalette[(i + 1) % this.state.palette.length];\n      const diffs = [c2.r - c1.r, c2.g - c1.g, c2.b - c1.b];\n\n      for (let j = 0; j < this.state.colorSmooth; j++) {\n        const r = (c1.r += diffs[0] / this.state.colorSmooth);\n        const g = (c1.g += diffs[1] / this.state.colorSmooth);\n        const b = (c1.b += diffs[2] / this.state.colorSmooth);\n        this.colors.push(`rgb(${r},${g},${b})`);\n      }\n    }\n  }\n\n  mandelbrot = c => {\n    let z = { a: 0, b: 0 };\n    for (let i = 0; i < this.state.iterations; i++) {\n      const { a, b } = this.squareC(z);\n      z.a = a + c.a;\n      z.b = b + c.b;\n      if (a > 2 || b > 2) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  checkPoint = point => {\n    const a = this.state.topLeft.a + point.x / this.xZoomConst;\n    const b = this.state.topLeft.b + point.y / this.yZoomConst;\n    const i = this.mandelbrot({ a, b });\n    this.grid[point.x][point.y] = i;\n    this.ctx.fillStyle = i === -1 ? '#222222' : this.colors[i % this.colors.length];\n    this.ctx.fillRect(point.x, point.y, 1, 1);\n  }\n\n  recolor = (palette, colorSmooth) => {\n    this.state.palette = palette;\n    if (colorSmooth) this.state.colorSmooth = colorSmooth;\n    this.makeColorsFromPalette();\n    for (let x = 0; x < this.width; x++) {\n      for (let y = 0; y < this.height; y++) {\n        const i = this.grid[x][y];\n        this.ctx.fillStyle = i === -1 ? '#222222' : this.colors[i % this.colors.length];\n        this.ctx.fillRect(x, y, 1, 1);\n      }\n    }\n  }\n\n  calcConsts = (x, y) => {\n    this.xZoomConst = (this.width * this.state.zoomConst) / 3;\n    this.yZoomConst = this.state.zoomConst / (3 / this.width);\n\n    const centerA = this.state.topLeft.a + (x / this.xZoomConst) * this.state.zoomFactor;\n    const centerB = this.state.topLeft.b + (y / this.yZoomConst) * this.state.zoomFactor;\n    console.log(`centerA: ${centerA}, centerB: ${centerB}`);\n\n    this.state.topLeft.a = centerA - this.width / 2 / this.xZoomConst;\n    this.state.topLeft.b = centerB - this.height / 2 / this.yZoomConst;\n    console.log(`Top Left: ${this.state.topLeft.a}, ${this.state.topLeft.b}`);\n    // document.getElementById(\"this.state.topLeft\").innerHTML = `Top Left: ${this.state.topLeft.a}, ${this.state.topLeft.b}`;\n  }\n\n  goThroughRow = x => {\n    for (let y = 0; y < this.height; y++) {\n      this.checkPoint({ x, y });\n    }\n  }\n\n  goThroughPoints = async => {\n    for (let x = 0; x < this.width; x++) {\n      if (async) {\n        setTimeout(() => this.goThroughRow(x), 0);\n      } else {\n        for (let y = 0; y < this.height; y++) {\n          this.checkPoint({ x, y });\n        }\n      }\n    }\n  }\n\n  zoom = ({ clientX, clientY }) => {\n    this.state.zoomConst *= this.state.zoomFactor;\n    this.ctx.clearRect(0, 0, this.width, this.height);\n    const x = clientX - this.canvas.getClientRects()[0].left;\n    const y = clientY - this.canvas.getClientRects()[0].top;\n    this.calcConsts(x, y);\n    this.goThroughPoints(true);\n  }\n\n  reset = () => {\n    this.ctx.clearRect(0, 0, this.width, this.height);\n    this.start(this.canvas, this.state);\n  }\n\n  update = state => {\n    this.state = state;\n  }\n\n  resize = (width, height) => {\n    this.canvas.width = width;\n    this.canvas.height = height;\n    this.width = width;\n    this.height = height;\n    this.xZoomConst = (width * this.state.zoomConst) / 3;\n    this.yZoomConst = this.state.zoomConst / (3 / width);\n    this.initGrid();\n    this.goThroughPoints(true);\n  }\n\n  save = () => {\n    let tempCanvas = this.canvas;\n    let tempCtx = this.ctx;\n    this.canvas = document.createElement(\"canvas\");\n    this.ctx = this.canvas.getContext(\"2d\");\n    this.width = 6000;\n    this.height = 4000;\n    this.canvas.width = this.width;\n    this.canvas.height = this.height;\n    this.xZoomConst = (this.width * this.state.zoomConst) / 3;\n    this.yZoomConst = this.state.zoomConst / (3 / this.width);\n    this.goThroughPoints();\n    this.canvas.toBlob(function(blob) {\n      saveAs(\n        blob,\n        `mandelbrot-${this.state.topLeft.a}-${this.state.topLeft.b}-${\n          this.state.zoomConst\n        }.png`\n      );\n    });\n    this.canvas = tempCanvas;\n    this.ctx = tempCtx;\n  }\n\n  start = (canvas, state) => {\n    this.canvas = canvas;\n    this.ctx = this.canvas.getContext(\"2d\");\n    this.state = state;\n    this.width = canvas.width;\n    this.height = canvas.height;\n    this.initGrid();\n    this.makeColorsFromPalette();\n    this.xZoomConst = (this.width * this.state.zoomConst) / 3;\n    this.yZoomConst = this.state.zoomConst / (3 / this.width);\n    this.goThroughPoints(true);\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Draw from \"./components/Draw\";\nimport ColorPicker from \"./components/ColorPicker\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Menu, Button } from \"semantic-ui-react\";\nimport { getRandomColor, getLeftOrRight } from \"./utils\";\nimport { sampleRules } from \"./samples\";\nimport queryString from \"query-string\";\nimport Mandelbrot from \"./Mandelbrot\";\n\nclass App extends Component {\n  state = {\n    mandelbrot: new Mandelbrot(),\n    topLeft: {\n      a: -2,\n      b: -1\n    },\n    palette: [\"#264653\", \"#2a9d8f\", \"#e9c46a\", \"#f4a261\", \"#e76f51\"],\n    zoomConst: 1,\n    zoomFactor: 10,\n    colorSmooth: 500,\n    iterations: 10000,\n    width: 600\n  };\n\n  NUM_RULES = Math.floor(Math.random() * 10) + 1;\n\n  changeSteps = steps => {\n    this.setState({ steps });\n  };\n\n  componentDidMount() {\n    const { zoom, left, top } = queryString.parse(window.location.search);\n    if (zoom && left && top) {\n      this.setState({\n        zoomConst: zoom,\n        topLeft: {\n          a: left,\n          b: top\n        }\n      });\n    }\n  }\n\n  changeColor = (index, color) => {\n    let palette = [...this.state.palette];\n    palette[index] = color.hex;\n    this.setState({ palette });\n    this.state.mandelbrot.recolor(palette);\n  };\n\n  changeSpeed = event => {\n    this.setState({ speed: event.target.value });\n  };\n\n  changeSize = event => {\n    this.setState({ size: event.target.value });\n  };\n\n  changeZoomConst = () => {\n    this.setState({ zoomConst: this.state.zoomConst * this.state.zoomFactor });\n  };\n\n  changeZoomFactor = event => {\n    this.setState({ zoomFactor: event.target.value });\n  };\n\n  changeIterations = event => {\n    this.setState({ iterations: event.target.value });\n  };\n\n  changeSmooth = event => {\n    this.setState({ colorSmooth: event.target.value });\n    this.state.mandelbrot.recolor(this.state.palette, event.target.value);\n  }\n\n  toggleRunning = () => {\n    this.setState({ running: !this.state.running });\n  };\n\n  handleItemClick = (e, { name }) => {\n    this.setState(sampleRules(name));\n  };\n\n  changePalette = () => {\n    const palette = [\"#faa916\", \"#bd312d\", \"#31393c\", \"#2176ff\", \"#06a77d\"];\n    this.setState({ palette });\n    this.state.mandelbrot.recolor(palette);\n  };\n\n  resize = () => {\n    const width = this.state.width === 600 ? 1200 : 600;\n    this.setState({ width });\n    this.state.mandelbrot.resize(width, (width * 2) / 3);\n  };\n\n  reset = () => {\n    this.setState({\n      topLeft: {\n        a: -2,\n        b: -1\n      },\n      zoomConst: 1\n    })\n    this.state.mandelbrot.reset();\n  }\n\n  hexToRGB = hex => {\n    var r = parseInt(hex.slice(1, 3), 16),\n      g = parseInt(hex.slice(3, 5), 16),\n      b = parseInt(hex.slice(5, 7), 16),\n      a = 1;\n\n    return { r, g, b, a };\n  };\n\n  render() {\n    return this.state.mandelbrot ? (\n      <div className={`app-${this.state.width}`}>\n        <Menu text>\n          <Menu.Item header>MandelbART</Menu.Item>\n          <Menu.Item name=\"cool\" onClick={this.handleItemClick} />\n          <Menu.Item name=\"themes\" onClick={this.handleItemClick} />\n          <Menu.Item>\n            {this.state.palette.map((color, index) => (\n              <ColorPicker\n                index={index}\n                changeColor={this.changeColor}\n                color={this.hexToRGB(color)}\n              />\n            ))}\n          </Menu.Item>\n          <Menu.Item>\n          <div className=\"sliders\">\n            <input\n              type=\"range\"\n              id=\"colorSmooth\"\n              value={this.state.colorSmooth}\n              name=\"colorSmooth\"\n              min=\"1\"\n              max=\"1000\"\n              onChange={this.changeSmooth}\n            />\n            <label htmlFor=\"iterations\">\n              Color Smooth: {this.state.colorSmooth}\n            </label>\n          </div>\n          </Menu.Item>\n          <Menu.Item>\n            <Button basic color=\"red\" onClick={this.changePalette}>\n              Palette\n            </Button>\n          </Menu.Item>\n          <Menu.Item>\n            <Button basic color=\"orange\" onClick={this.resize}>\n              {this.state.width === 600 ? \"Larger\" : \"Smaller\"}\n            </Button>\n          </Menu.Item>\n        </Menu>\n        <Draw\n          state={this.state}\n          changeSize={this.changeSize}\n          changeSpeed={this.changeSpeed}\n          changeZoomConst={this.changeZoomConst}\n          changeZoomFactor={this.changeZoomFactor}\n          changeIterations={this.changeIterations}\n          changePalette={this.changePalette}\n          resize={this.resize}\n          reset={this.reset}\n          toggleRunning={this.toggleRunning}\n        />\n      </div>\n    ) : (\n      <div>hey</div>\n    );\n  }\n}\n\nexport default App;\n","export function getRandomColor() {\n  return \"#\" + ((Math.random() * 0xffffff) << 0).toString(16);\n}\n\nexport function getLeftOrRight() {\n  return Math.random() > 0.5 ? \"left\" : \"right\";\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}